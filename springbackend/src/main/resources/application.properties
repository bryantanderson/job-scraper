spring.application.name=linkd

## Configures the path for Swagger UI
springdoc.api-docs.path=/docs

## Configures logging level for Spring
logging.level.root=${LOGGING_LEVEL:INFO}
logging.level.org.springframework.web=${LOGGING_LEVEL:INFO}

## Enable virtual threads
spring.threads.virtual.enabled=true

## Custom env vars
application.environment=${APPLICATION_ENVIRONMENT:dev}

service.bus.connection.string=${SERVICE_BUS_CONNECTION_STRING}

service.bus.job.tasks.topic=${JOB_TASKS_TOPIC}
service.bus.job.results.topic=${JOB_RESULTS_TOPIC}
service.bus.assessment.tasks.topic=${ASSESSMENT_TASKS_TOPIC}
service.bus.assessment.results.topic=${ASSESSMENT_RESULTS_TOPIC}

## HikariCP for managing connection pool to PostgreSQL db
spring.datasource.hikari.connectionTimeout=${HIKARI_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.maximumPoolSize=${HIKARI_MAX_POOL_SIZE:10}

## Allows Spring Boot to start even if the database is down.
## Spring Boot employs a fail-fast feature of its script-based database initializer,
## meaning that exceptions in the script will not allow the app to start.
spring.sql.init.continue-on-error=true

## PostgreSQL credentials
spring.datasource.url=${POSTGRES_URI}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASS}

spring.jpa.hibernate.ddl-auto=create

## Ensures the Actuator's /actuator/prometheus endpoint is exposed. It provides app
## metrics in a format that prometheus can scrape
management.endpoints.web.exposure.include=*
management.endpoint.health.show.details=always
